import { type SuiteID } from './oprf.js';
import type { CryptoProvider } from './cryptoTypes.js';
import type { GroupID } from './groupTypes.js';
declare const REQUIRED: boolean;
type OptionalArg = [cryptoProvider?: CryptoProvider];
type RequiredArg = [CryptoProvider];
export type CryptoProviderArg = typeof REQUIRED extends true ? RequiredArg : OptionalArg;
export declare function getCrypto(arg: CryptoProviderArg): CryptoProvider;
export declare function getGroup(groupID: GroupID, arg: CryptoProviderArg): import("./groupTypes.js").Group;
export declare function getSuiteGroup(suite: SuiteID, arg: CryptoProviderArg): import("./groupTypes.js").Group;
export declare function setCryptoProvider(provider: CryptoProvider): void;
export declare function getCryptoProvider(): CryptoProvider;
export {};
//# sourceMappingURL=cryptoImpl.d.ts.map