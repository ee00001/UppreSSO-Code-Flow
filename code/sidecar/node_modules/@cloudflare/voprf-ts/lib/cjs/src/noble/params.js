"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getParams = getParams;
// Copyright (c) 2021 Cloudflare, Inc. and contributors.
// Copyright (c) 2021 Cloudflare, Inc.
// Licensed under the BSD-3-Clause license found in the LICENSE file or
// at https://opensource.org/licenses/BSD-3-Clause
const p256 = __importStar(require("@noble/curves/p256"));
const p384 = __importStar(require("@noble/curves/p384"));
const p521 = __importStar(require("@noble/curves/p521"));
const ed25519 = __importStar(require("@noble/curves/ed25519"));
const ed448 = __importStar(require("@noble/curves/ed448"));
const ed25519_1 = require("@noble/curves/ed25519");
const ed448_1 = require("@noble/curves/ed448");
const sha512_1 = require("@noble/hashes/sha512");
const groupTypes_js_1 = require("../groupTypes.js");
const short_js_1 = require("./short.js");
const edwards_js_1 = require("./edwards.js");
const hashes_js_1 = require("./hashes.js");
const GROUPS = {
    [groupTypes_js_1.GROUP.P256]: (0, short_js_1.shortCurve)({
        curve: p256.p256,
        hashID: 'SHA-256',
        elementHash: p256.hashToCurve,
        securityBits: 128
    }),
    [groupTypes_js_1.GROUP.P384]: (0, short_js_1.shortCurve)({
        curve: p384.p384,
        hashID: 'SHA-384',
        elementHash: p384.hashToCurve,
        securityBits: 192
    }),
    [groupTypes_js_1.GROUP.P521]: (0, short_js_1.shortCurve)({
        curve: p521.p521,
        hashID: 'SHA-512',
        elementHash: p521.hashToCurve,
        securityBits: 256
    }),
    [groupTypes_js_1.GROUP.RISTRETTO255]: (0, edwards_js_1.edwardsCurve)({
        curve: ed25519.ed25519,
        hashID: 'SHA-512',
        scalarHash: { type: 'xmd' },
        element: {
            hash: ed25519_1.hashToRistretto255,
            Point: ed25519.RistrettoPoint
        },
        hash: sha512_1.sha512
    }),
    [groupTypes_js_1.GROUP.DECAF448]: (0, edwards_js_1.edwardsCurve)({
        curve: ed448.ed448,
        hashID: 'SHAKE256',
        scalarHash: { type: 'xof', k: 448 },
        element: {
            hash: ed448_1.hashToDecaf448,
            Point: ed448.DecafPoint
        },
        hash: hashes_js_1.shake256_512
    })
};
function getParams(gid) {
    if (!Object.values(groupTypes_js_1.GROUP).includes(gid))
        throw (0, groupTypes_js_1.errBadGroup)(gid);
    const { [gid]: params } = GROUPS;
    return params;
}
//# sourceMappingURL=params.js.map