import { getOprfParams } from './oprf.js';
import { CRYPTO_PROVIDER_ARG_REQUIRED, DEFAULT_CRYPTO_PROVIDER } from './buildSettings.js';
const REQUIRED = CRYPTO_PROVIDER_ARG_REQUIRED;
let configured = DEFAULT_CRYPTO_PROVIDER;
export function getCrypto(arg) {
    const [provider] = arg;
    if (!provider && REQUIRED) {
        throw new Error(`Undefined crypto arg`);
    }
    return provider ?? configured;
}
export function getGroup(groupID, arg) {
    const provider = getCrypto(arg);
    return provider.Group.get(groupID);
}
export function getSuiteGroup(suite, arg) {
    return getGroup(getOprfParams(suite)[1], arg);
}
// This way the `old` api can be used
export function setCryptoProvider(provider) {
    configured = provider;
}
export function getCryptoProvider() {
    return configured;
}
//# sourceMappingURL=cryptoImpl.js.map