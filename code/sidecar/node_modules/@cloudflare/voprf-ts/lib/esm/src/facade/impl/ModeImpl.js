import { ServerImpl } from './ServerImpl.js';
import { ClientImpl } from './ClientImpl.js';
import { KeyManagerImpl } from './KeyManagerImpl.js';
import { getOprfParams } from '../../oprf.js';
export class ModeImpl {
    constructor(mode, suite, group, crypto) {
        this.mode = mode;
        this.suite = suite;
        this.group = group;
        this.crypto = crypto;
        this.keys = new KeyManagerImpl(...this.getBaseArgs());
        this.params = this.getParams();
    }
    getParams() {
        const [suite, group, hash, size] = getOprfParams(this.suite);
        const scalar = this.group.scalarSize();
        const elt = this.group.eltSize();
        return {
            mode: this.mode,
            suite,
            group,
            hash,
            sizes: {
                elt: elt,
                output: size,
                proof: scalar * 2,
                scalar
            }
        };
    }
    makeServer(privateKey) {
        return new ServerImpl(privateKey, ...this.getBaseArgs());
    }
    makeClient(publicKey) {
        return new ClientImpl(publicKey, ...this.getBaseArgs());
    }
    getBaseArgs() {
        return [this.mode, this.suite, this.crypto, this.group];
    }
}
//# sourceMappingURL=ModeImpl.js.map