import type { OprfApi, ModeID, MakeModeParams, Mode } from '../types.js';
import type { CryptoProvider } from '../../cryptoTypes.js';
export declare class OprfApiImpl implements OprfApi {
    private _crypto?;
    constructor(_crypto?: CryptoProvider | undefined);
    get crypto(): CryptoProvider;
    Suite: {
        readonly P256_SHA256: "P256-SHA256";
        readonly P384_SHA384: "P384-SHA384";
        readonly P521_SHA512: "P521-SHA512";
        readonly RISTRETTO255_SHA512: "ristretto255-SHA512";
        readonly DECAF448_SHAKE256: "decaf448-SHAKE256";
    };
    Mode: {
        readonly OPRF: 0;
        readonly VOPRF: 1;
        readonly POPRF: 2;
    };
    withConfig(config: {
        crypto: CryptoProvider;
    }): OprfApi;
    makeMode<M extends ModeID>(params: MakeModeParams<M>): Mode<M>;
}
//# sourceMappingURL=OprfApiImpl.d.ts.map