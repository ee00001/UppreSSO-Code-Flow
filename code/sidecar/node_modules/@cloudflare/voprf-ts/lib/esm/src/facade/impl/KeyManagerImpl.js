import { OprfBaseImpl } from './OprfBaseImpl.js';
import { getKeySizes, validatePrivateKey, validatePublicKey, randomPrivateKey, derivePrivateKey, generatePublicKey, generateKeyPair, deriveKeyPair } from '../../keys.js';
export class KeyManagerImpl extends OprfBaseImpl {
    sizes() {
        const internal = getKeySizes(this.suite, this.crypto);
        return { publicKey: internal.Npk, privateKey: internal.Nsk };
    }
    validatePrivate(privateKey) {
        return validatePrivateKey(this.suite, privateKey, this.crypto);
    }
    validatePublic(publicKey) {
        return validatePublicKey(this.suite, publicKey, this.crypto);
    }
    randomPrivate() {
        return randomPrivateKey(this.suite, this.crypto);
    }
    derivePrivate(seed, info) {
        return derivePrivateKey(this.mode, this.suite, seed, info, this.crypto);
    }
    generatePublic(privateKey) {
        return generatePublicKey(this.suite, privateKey, this.crypto);
    }
    generatePair() {
        return generateKeyPair(this.suite, this.crypto);
    }
    derivePair(seed, info) {
        return deriveKeyPair(this.mode, this.suite, seed, info, this.crypto);
    }
}
//# sourceMappingURL=KeyManagerImpl.js.map